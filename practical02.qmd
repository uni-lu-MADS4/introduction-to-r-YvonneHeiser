---
title: "Getting started with R"
author: Yvonne Heiser
date: 23th September 2024
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}

c("A","B","C")

```
> I created a vector containing the three letters "A", B" and "C".



* Assign the vector to a variable `my_letters`
```{r}

my_letters <- c("A","B","C")

```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}

letters

```

> If I run letters on the command line, I get every single letter as output. 



* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}

c(my_letters , my_letters)

```

> If I concatenate two vectors, I get one vector containing the elements of the two vectors one after another.  



* Add the number 1 to letters. What happens to the type of the vector?
```{r}

my_letters <- c(my_letters, as.character(1))
my_letters
typeof(my_letters)

```

> After adding the number 1 to the letters, I get the type "character".



### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}

my_vec <- c(1:8)
my_vec + 2
my_vec <- c(my_vec, 1:4)
my_vec

```

>The operation +2 makes that the vector contains the numbers from 3 through 10 instead of 1:8, so +2 to all the numbers. It doesn't change the vector itself though. 

### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
 
 
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}

matrix(c(4,9,10,1,5,7),nrow=3,ncol=2)
A <- matrix(c(4,9,10,1,5,7),nrow=3,ncol=2)
dim(A)
A[5]
cbind(A, c(0,0,0))
A <- cbind(A, c(0,0,0))
A[1,1] <- 0
t(A)

```


8. Are any values in `A` larger than 10? 
```{r}

A > 10

```

9. Are all values in `A` smaller than 10?
```{r}

A < 10

```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}

sum_values <- function(x,y) {
  x <- as.numeric(x) 
  y <- as.numeric(y) 
  return(x + y)
}
print(sum_values(5,3))

```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}

my_function <- function(x){
  mean_value <- (mean(x,na.rm = TRUE))
  median_value <- (median(x, na.rm = TRUE))
  sd_value <- (sd(x, na.rm = TRUE))
  return(list(mean = mean_value, median = median_value,  standard_deviation = sd_value))
}
numbers <- c(1,3,5,2,7)
print(my_function(numbers))

```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}

count_NA <- function(vec){
  vec |> 
    is.na() |> 
      sum()
}

count_NA(c('1' , "a", NA, "2", NA))


```


